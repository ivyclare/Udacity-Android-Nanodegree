<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

    <data>

        <variable
            name="buttonSelect"
            type="com.udacity.shoestore.ShoeListFragment"
            />
    </data>
    <!--    I decided to use ConstraintLayout because it allows you to make large and complex layouts-->
    <!--    with a flat view hierarchy.It is also more flexible compared to Relative and Linear Layouts-->
    <androidx.constraintlayout.widget.ConstraintLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        tools:context=".shoes.ShoeListFragment">

        <ScrollView
            android:id="@+id/shoeScrollView"
            android:layout_width="match_parent"
            android:layout_height="match_parent">
<!--            Used a Linear Layout here because it is alot easier to change the position of the elements-->
            <LinearLayout
                android:id="@+id/shoeView"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:orientation="vertical"

                />
        </ScrollView>

        <com.google.android.material.floatingactionbutton.FloatingActionButton
            android:id="@+id/addButton"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_marginEnd="16dp"
            android:layout_marginBottom="16dp"
            android:src="@drawable/ic_add"
            android:text="@string/next"
            android:onClick="@{(view) -> buttonSelect.addShoe(view)}"
            app:layout_constraintBottom_toBottomOf="parent"
            app:layout_constraintEnd_toEndOf="parent" />

    </androidx.constraintlayout.widget.ConstraintLayout>
</layout>
